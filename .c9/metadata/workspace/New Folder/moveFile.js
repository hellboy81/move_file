{"filter":false,"title":"moveFile.js","tooltip":"/New Folder/moveFile.js","undoManager":{"mark":0,"position":0,"stack":[[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":0,"column":0},"end":{"row":0,"column":23}},"text":"var fs = require(\"fs\");"},{"action":"insertText","range":{"start":{"row":0,"column":23},"end":{"row":1,"column":0}},"text":"\n"},{"action":"insertLines","range":{"start":{"row":1,"column":0},"end":{"row":77,"column":0}},"lines":["","/**","* Copy a file","*","* @param {String} sourceFile Path to the source file that needs to be copied","* @param {String} destFile Path to the destination to which the file needs to be coppied","* @param {Function} callback Standard callback function","* @param {Object} callback.err Error object if any","*/","var copyFile = function(sourceFile, destFile, callback) {","    var sourceStream = fs.createReadStream(sourceFile);","    var destStream = fs.createWriteStream(destFile);","","    // Clean up if there's an error reading the source file","    sourceStream.once('error', function(err) {","        // sourceStream is closed or destroyed?","        ","        // We should destroy destination stream","        destroyStream(destStream);","        ","        // copyFile() - Wasn't able to copy the file. Problem copying file","        callback(err);","    });","    ","    // Clean up if there's an error writing the destination file","    destStream.once('error', function(err) {","        // destStream is closed or destroyed?","        ","        // OnClose handler should not be called","        destStream.removeAllListeners('close');","        ","        // OnError handler should not be called","        sourceStream.removeAllListeners('error');","        ","        // sourceStream should be destroyed also","        sourceStream.destroy();","        ","        // copyFile() - Wasn't able to copy the file. Could not open destStream","        callback(err); ","    });","    ","    destStream.once('close', function() {","        // File has been successfully copied","        callback(null); ","    });","    ","    sourceStream.pipe(destStream);","};","","/**","* Move a file as copy and delete","*","* @param {String} sourceFile Path to the source file that needs to be moved","* @param {String} destFile Path to the destination to which the file needs to be moved","* @param {Function} callback Standard callback function","* @param {Object} callback.err Error object if any","*/","var moveFile = function(sourceFile, destFile, callback) {","    copyFile(sourceFile, destFile, function(err) {","        if (err) {","            return callback(err);","        } else {","            fs.unlink(sourceFile, callback);","        }","    });","}","","/**","* Destroy a stream and remove all the listeners.","*","* @param {Stream} stream The stream to destroy","*/","var destroyStream = function(stream) {","    stream.removeAllListeners('error');","    stream.removeAllListeners('close');","    stream.destroy();"]},{"action":"insertText","range":{"start":{"row":77,"column":0},"end":{"row":77,"column":2}},"text":"};"}]}]]},"ace":{"folds":[],"scrolltop":725,"scrollleft":0,"selection":{"start":{"row":55,"column":29},"end":{"row":55,"column":29},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":44,"state":"start","mode":"ace/mode/javascript"}},"timestamp":1410289988575,"hash":"f0bbc60bf4585a054460e8f43b0a5d86331bc32c"}